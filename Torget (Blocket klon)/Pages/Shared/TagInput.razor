@using Microsoft.AspNetCore.Components.Web

<MudTextField @ref="_tagFieldElement" @bind-Value="_tagName" DisableUnderLine="true" Style="height: 38px;"  
              Placeholder="Ange sökord/taggar" Class="input-element" Variant="Variant.Text" Clearable="true" Immediate="true" KeyDownPreventDefault="true" OnKeyDown="ReadKeyAndCreateTagChip" TextUpdateSuppression="false"></MudTextField>
<MudChipSet AllClosable="true" OnClose="RemoveTag">
    @foreach (var tagName in _tagList)
    {
        <MudChip Text="@tagName"></MudChip>
    }
</MudChipSet>

@code
{
    MudTextField<string> _tagFieldElement;
    ElementReference _focusElement;

    private string _tagName { get; set; }

    readonly List<string> _tagList = new();

    
    private void CreateTagChip()
    {
        _tagList.Add(_tagName);
        _tagName = "";
    }

    private void Backspace() => _tagName = 
        string.Join("", 
            _tagName
                .ToCharArray()
                .SkipLast(1)
                .ToArray());

    private void RemoveTag(MudChip chip) => _tagList.Remove(chip.Text);

    private void ReadKeyAndCreateTagChip(KeyboardEventArgs args)
    {
        switch (args.Key)
        {
            case " ":
            case "Enter":
            case ",":
            case "Tab":
                CreateTagChip();
                return;
            case "Backspace":
            {
                Backspace();
                return;
            }
            default:
                if (args.Key.Length > 1) return;
                _tagName += args.Key;
                break;
        }
        
    }

}